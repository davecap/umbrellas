import MDAnalysis
from MDAnalysis.tests.datafiles import PDB_small, PDB, PSF, DCD, GRO, XTC

import os

import umbrellas
from umbrellas.ensemble import Replica
from umbrellas.reaction import Distance

TEST_CONFIG = """# Umbrellas Config File
title = Test Ensemble
replicadb = replicas.db
debug = False

[reaction]
    type = Distance
    target = resid 1 and name N
    reference = resid 41 and name N 
    components = xyz

"""

TEST_COORDINATE = 27.0437429761

def test_new_ensemble(tmpdir):
    cpath = tmpdir.join('config.ini')
    rpath = tmpdir.join('replicas.db')
    cpath.write(TEST_CONFIG)
    
    e = umbrellas.Ensemble(config_path=str(cpath))
    e.save()
    assert e
    assert os.path.exists(str(cpath))
    assert os.path.exists(str(rpath))

def test_reload_ensemble(tmpdir):
    cpath = tmpdir.join('config.ini')
    rpath = tmpdir.join('replicas.db')
    cpath.write(TEST_CONFIG)

    e = umbrellas.Ensemble(config_path=str(cpath))
    e.save()
    assert e
    assert os.path.exists(str(cpath))
    assert os.path.exists(str(rpath))
    
    e1 = umbrellas.Ensemble(config_path=str(cpath))
    e1.save()
    assert e1

def test_reload_ensemble_replicas(tmpdir):
    cpath = tmpdir.join('config.ini')
    rpath = tmpdir.join('replicas.db')
    cpath.write(TEST_CONFIG)

    e = umbrellas.Ensemble(config_path=str(cpath))
    e.add_replica(name='test0', coordinates=PDB_small, force=0.0)
    e.add_replica(name='test1', coordinates=PDB_small, force=0.0)
    e.save()
    
    e1 = umbrellas.Ensemble(config_path=str(cpath))
    assert e1
    assert e1.get_replica('test0')
    assert e1.get_replica('test1')

def test_add_replica_to_db(tmpdir):
    cpath = tmpdir.join('config.ini')
    rpath = tmpdir.join('replicas.db')
    cpath.write(TEST_CONFIG)

    e = umbrellas.Ensemble(config_path=str(cpath))
    e.add_replica(name='testpdb', coordinates=PDB_small, force=0.0)
    e.save()
    r = e.get_replica('testpdb')
    assert r
    assert rpath.read() == """# Replica DB
# AUTOGENERATED - EDIT AT YOUR OWN RISK

[replicas]
    [[testpdb]]
        coordinate = %s
        force = 0.0
        coordinates = %s

""" % (TEST_COORDINATE, PDB_small)

def test_replica_parameters(tmpdir):
    cpath = tmpdir.join('config.ini')
    rpath = tmpdir.join('replicas.db')
    cpath.write(TEST_CONFIG)

    e = umbrellas.Ensemble(config_path=str(cpath))
    
    e.add_replica(name='trp0', coordinate=TEST_COORDINATE, coordinates=PDB_small, intparam=1, strparam="teststring")
    e.save()
    
    r = e.get_replica('trp0')
    params = Replica.DEFAULTS.copy()
    params.update({ 'coordinate': TEST_COORDINATE, 'coordinates': PDB_small, 'intparam': 1, 'strparam': "teststring" })
    assert r.parameters == params
    
    e.add_replica(name='trp1', coordinate=TEST_COORDINATE, coordinates=PDB_small, intparam=2, strparam="newstring", specialparam="special")
    e.save()
    
    r = e.get_replica('trp1')
    params = Replica.DEFAULTS.copy()
    params.update({ 'coordinate': TEST_COORDINATE, 'coordinates':PDB_small, 'intparam': 2, 'strparam': "newstring", 'specialparam': "special" })
    assert r.parameters == params

def test_replica_coordinates_load(tmpdir):
    cpath = tmpdir.join('config.ini')
    rpath = tmpdir.join('replicas.db')
    cpath.write(TEST_CONFIG)

    e = umbrellas.Ensemble(config_path=str(cpath))
    
    u = MDAnalysis.Universe(PDB_small)
    
    e.add_replica(name='trl0', coordinates=PDB_small)
    e.save()
    
    r = e.get_replica('trl0')
    r_u = r.universe()
    assert str(r_u) == str(u)
    assert u.filename == r.u_coordinates()
    assert PDB_small == r.u_coordinates()
    assert r.u_structure() == None

def test_replica_coordinates_structure_load(tmpdir):
    cpath = tmpdir.join('config.ini')
    rpath = tmpdir.join('replicas.db')
    cpath.write(TEST_CONFIG)

    e = umbrellas.Ensemble(config_path=str(cpath))

    u = MDAnalysis.Universe(PSF,DCD)

    e.add_replica(name='trl0', coordinates=DCD, structure=PSF)
    e.save()
    
    r = e.get_replica('trl0')
    r_u = r.universe()
    assert str(r_u) == str(u)
    assert u.trajectory.filename == r.u_coordinates()
    assert DCD == r.u_coordinates()
    assert u.filename == r.u_structure()
    assert PSF == r.u_structure()
    assert r_u == r.universe()

def test_replica_coordinate_xyz(tmpdir):
    cpath = tmpdir.join('config.ini')
    rpath = tmpdir.join('replicas.db')
    
    test_spec = """# Umbrellas Config File
title = Test Ensemble
replicadb = replicas.db
debug = False

[reaction]
    type = Distance
    # ATOM      1 N    MET     1     -11.921  26.307  10.410  1.00 38.38      4AKE
    target = resid 1 and name N
    # ATOM    614 N    SER    41     -14.463   4.877  -5.889  1.00 75.64      4AKE
    reference = resid 41 and name N
    components = xyz

"""
    # set up the config file
    cpath.write(test_spec)
    e = umbrellas.Ensemble(config_path=str(cpath))
    e.add_replica(name='trc0', coordinates=PDB_small)
    e.save()
    
    r = e.get_replica('trc0')
    u = r.universe()
    assert u
    # 27.04477972
    assert "%.3f" % r.coordinate() == "27.044"
    

def test_replica_coordinate_z(tmpdir):
    cpath = tmpdir.join('config.ini')
    rpath = tmpdir.join('replicas.db')

    test_spec = """# Umbrellas Config File
title = Test Ensemble
replicadb = replicas.db
debug = False

[reaction]
    type = Distance
    # ATOM      1 N    MET     1     -11.921  26.307  10.410  1.00 38.38      4AKE
    target = resid 1 and name N
    # ATOM    614 N    SER    41     -14.463   4.877  -5.889  1.00 75.64      4AKE
    reference = resid 41 and name N 
    components = z

"""
    # set up the config file
    cpath.write(test_spec)
    e = umbrellas.Ensemble(config_path=str(cpath))
    e.add_replica(name='trc0', coordinates=PDB_small)
    e.save()
    
    r = e.get_replica('trc0')
    u = r.universe()
    assert u
    # 16.299
    assert "%.3f" % r.coordinate() == "-16.299"
    
def test_replica_save(tmpdir):
    cpath = tmpdir.join('config.ini')
    rpath = tmpdir.join('replicas.db')
    cpath.write(TEST_CONFIG)
    
    e = umbrellas.Ensemble(config_path=str(cpath))
    e.add_replica(name='trc0', coordinates=PDB_small)
    e.save()
    
    r = e.get_replica('trc0')
    u = r.universe()
    assert u

    pdbpath = tmpdir.join('trc0.pdb')    
    r.save(path=str(pdbpath))
    assert r.coordinates() == str(pdbpath)
    assert os.path.exists(str(pdbpath))
    
    e.add_replica(name='trc1', coordinates=str(pdbpath))
    e.save()
    
    r1 = e.get_replica('trc1')
    assert r.coordinates() == r1.coordinates()
    assert str(r.universe()) == str(r1.universe())

def test_replica_mutate_xyz(tmpdir):
    cpath = tmpdir.join('config.ini')
    rpath = tmpdir.join('replicas.db')

    test_spec = """# Umbrellas Config File
title = Test Ensemble
replicadb = replicas.db
debug = False

[reaction]
    type = Distance
    # ATOM      1 N    MET     1     -11.921  26.307  10.410  1.00 38.38      4AKE
    target = resid 1 and name N
    # ATOM    614 N    SER    41     -14.463   4.877  -5.889  1.00 75.64      4AKE
    reference = resid 41 and name N
    components = xyz

"""
    # set up the config file
    cpath.write(test_spec)
    e = umbrellas.Ensemble(config_path=str(cpath))
    e.add_replica(name='trm0', coordinates=PDB_small)
    e.save()
    
    r = e.get_replica('trm0')
    u = r.universe()
    # 27.04477972
    assert "%.3f" % r.coordinate() == "27.044"
    
    pdbpath_orig = tmpdir.join('trm0_xyz_orig.pdb')
    r.save(path=str(pdbpath_orig))
    
    r.mutate(step=1.0)
    pdbpath = tmpdir.join('trm0_xyz_mutated.pdb')    
    r.save(path=str(pdbpath))
    
    assert "%.3f" % r.coordinate() == "26.044"
  
def test_replica_mutate_z(tmpdir):
    cpath = tmpdir.join('config.ini')
    rpath = tmpdir.join('replicas.db')

    test_spec = """# Umbrellas Config File
title = Test Ensemble
replicadb = replicas.db
debug = False

[reaction]
    type = Distance
    # ATOM      1 N    MET     1     -11.921  26.307  10.410  1.00 38.38      4AKE
    target = resid 1 and name N
    # ATOM    614 N    SER    41     -14.463   4.877  -5.889  1.00 75.64      4AKE
    reference = resid 41 and name N 
    components = z

"""
    # set up the config file
    cpath.write(test_spec)
    e = umbrellas.Ensemble(config_path=str(cpath))
    e.add_replica(name='trm0', coordinates=PDB_small)
    e.save()
    
    r = e.get_replica('trm0')
    u = r.universe()
    # 16.299
    assert "%.3f" % r.coordinate() == "-16.299"
    
    pdbpath_orig = tmpdir.join('trm0_z_orig.pdb')
    r.save(path=str(pdbpath_orig))
    
    r.mutate(step=1.0)
    pdbpath = tmpdir.join('trm0_z_mutated.pdb')    
    r.save(path=str(pdbpath))
    
    assert "%.3f" % r.coordinate() == "-15.299"
    
        